{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","setState","console","log","toLocaleTimeString","cancel","clearInterval","this","prevProps","props","className","type","onClick","React","Component","App","isClockVisible","clockName","Math","random","showTime","hideTime","changeName","name","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAA0BC,aAAY,WACpC,EAAKC,SAAS,CACZJ,KAAM,IAAIC,OAGZI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,KAXL,EA4BEC,OAAS,WACPC,cAAc,EAAKP,SAEnBG,QAAQC,IAAI,cA/BhB,uDAaE,WACE,OAAOI,KAAKR,UAdhB,gCAiBE,SAAmBS,GACbA,IAAcD,KAAKE,OAErBP,QAAQC,IAAI,mDApBlB,kCAwBE,WACEG,cAAcC,KAAKR,WAzBvB,oBAkCE,WACE,OACE,sBAAKW,UAAU,MAAf,UACE,6CACA,8CAEG,IACAH,KAAKX,MAAMC,KAAKO,wBAEnB,wBAAQO,KAAK,SAASC,QAASL,KAAKF,OAApC,2BA3CR,GAA2BQ,IAAMC,WCD3BC,E,4MACJnB,MAAe,CACboB,gBAAgB,EAChBC,UAAWC,KAAKC,U,EAGlBC,SAAW,WACT,EAAKnB,SAAS,CACZe,gBAAgB,K,EAIpBK,SAAW,WACT,EAAKpB,SAAS,CACZe,gBAAgB,K,EAIpBM,WAAa,WACX,EAAKrB,SAAS,CACZgB,UAAWC,KAAKC,Y,4CAIpB,WACE,OACE,qCACGZ,KAAKX,MAAMoB,gBACV,cAAC,EAAD,CAAOO,KAAMhB,KAAKX,MAAMqB,YAE1B,wBAAQN,KAAK,SAASC,QAASL,KAAKa,SAApC,wBACA,wBAAQT,KAAK,SAASC,QAASL,KAAKc,SAApC,wBACA,wBAAQV,KAAK,SAASC,QAASL,KAAKe,WAApC,oC,GAhCUT,IAAMC,WAsCTC,IC5CfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.650ad72d.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timeout = setInterval(() => {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    return this.timerId;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      // eslint-disable-next-line no-console\n      console.log('The Clock was renamed from oldName to newName');\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  cancel = () => {\n    clearInterval(this.timerId);\n    // eslint-disable-next-line no-console\n    console.log('cancelled');\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n        <button type=\"button\" onClick={this.cancel}>Cancel</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: Math.random(),\n  };\n\n  showTime = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideTime = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  changeName = () => {\n    this.setState({\n      clockName: Math.random(),\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <>\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        ) }\n        <button type=\"button\" onClick={this.showTime}>Show Clock</button>\n        <button type=\"button\" onClick={this.hideTime}>Hide Clock</button>\n        <button type=\"button\" onClick={this.changeName}>Set random name</button>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}