{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","setState","console","log","toLocaleTimeString","this","prevProps","props","name","clearInterval","className","React","Component","App","isClockVisible","clockName","Math","random","showTime","hideTime","changeName","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAA0BC,aAAY,WACpC,EAAKC,SAAS,CACZJ,KAAM,IAAIC,OAGZI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,KAXL,uDAaE,WACE,OAAOC,KAAKN,UAdhB,gCAiBE,SAAmBO,GACbA,IAAcD,KAAKE,OAErBL,QAAQC,IAAR,qCAA0CG,EAAUE,KAApD,eAA+DH,KAAKE,MAAMC,SApBhF,kCAwBE,WACEC,cAAcJ,KAAKN,WAzBvB,oBA4BE,WACE,OACE,sBAAKW,UAAU,MAAf,UACE,6CAEA,8CAEG,IACAL,KAAKT,MAAMC,KAAKO,+BApC3B,GAA2BO,IAAMC,WCD3BC,E,4MACJjB,MAAe,CACbkB,gBAAgB,EAChBC,UAAWC,KAAKC,U,EAGlBC,SAAW,WACT,EAAKjB,SAAS,CAAEa,gBAAgB,K,EAGlCK,SAAW,WACT,EAAKlB,SAAS,CAAEa,gBAAgB,K,EAGlCM,WAAa,WACX,EAAKnB,SAAS,CAAEc,UAAWC,KAAKC,Y,4CAGlC,WACE,OACE,sBAAKP,UAAU,YAAf,UACGL,KAAKT,MAAMkB,gBACV,cAAC,EAAD,CAAON,KAAMH,KAAKT,MAAMmB,YAE1B,wBACEM,KAAK,SACLX,UAAU,0BACVY,QAASjB,KAAKa,SAHhB,wBAQA,wBACEG,KAAK,SACLX,UAAU,uBACVY,QAASjB,KAAKc,SAHhB,wBAQA,wBACEE,KAAK,SACLX,UAAU,0BACVY,QAASjB,KAAKe,WAHhB,oC,GAxCUT,IAAMC,WAoDTC,IC1DfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f21ec03c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timeout = setInterval(() => {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }, 1000);\n\n  componentDidMount() {\n    return this.timerId;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps !== this.props) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React Clock</h1>\n\n        <p>\n          Current time:\n          {' '}\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: Math.random(),\n  };\n\n  showTime = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideTime = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  changeName = () => {\n    this.setState({ clockName: Math.random() });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"container\">\n        {this.state.isClockVisible && (\n          <Clock name={this.state.clockName} />\n        ) }\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success\"\n          onClick={this.showTime}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-info\"\n          onClick={this.hideTime}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={this.changeName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}